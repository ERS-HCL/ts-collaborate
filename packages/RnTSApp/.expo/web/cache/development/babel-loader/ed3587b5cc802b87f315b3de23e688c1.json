{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\workspace\\\\wu\\\\ts-collaborate\\\\packages\\\\RnTSApp\\\\src\\\\components\\\\Counter.tsx\";\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, selectCount } from '@thefakeorg/store';\nimport withStoreProvider from \"../hooks/withStoreProvider\";\nimport CounterBase from \"./CounterBase\";\n\nvar Counter = function Counter() {\n  var count = useSelector(selectCount);\n  var dispatch = useDispatch();\n  return React.createElement(CounterBase, {\n    onDown: function onDown() {\n      return dispatch(decrement());\n    },\n    onUp: function onUp() {\n      return dispatch(increment());\n    },\n    count: count,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withStoreProvider(Counter);","map":{"version":3,"sources":["C:/workspace/wu/ts-collaborate/packages/RnTSApp/src/components/Counter.tsx"],"names":["React","useSelector","useDispatch","decrement","increment","selectCount","withStoreProvider","CounterBase","Counter","count","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,QAAkD,mBAAlD;AAEA,OAAOC,iBAAP;AACA,OAAOC,WAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,KAAK,GAAGR,WAAW,CAACI,WAAD,CAAzB;AACA,MAAMK,QAAQ,GAAGR,WAAW,EAA5B;AAEA,SACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAE;AAAA,aAAMQ,QAAQ,CAACP,SAAS,EAAV,CAAd;AAAA,KADV;AAEE,IAAA,IAAI,EAAE;AAAA,aAAMO,QAAQ,CAACN,SAAS,EAAV,CAAd;AAAA,KAFR;AAGE,IAAA,KAAK,EAAEK,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAXD;;AAaA,eAAeH,iBAAiB,CAACE,OAAD,CAAhC","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { decrement, increment, selectCount } from '@thefakeorg/store';\r\n\r\nimport withStoreProvider from '../hooks/withStoreProvider';\r\nimport CounterBase from './CounterBase';\r\n\r\nconst Counter = () => {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <CounterBase\r\n      onDown={() => dispatch(decrement())}\r\n      onUp={() => dispatch(increment())}\r\n      count={count}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStoreProvider(Counter);\r\n"]},"metadata":{},"sourceType":"module"}